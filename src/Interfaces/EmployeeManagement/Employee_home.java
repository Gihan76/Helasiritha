/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces.EmployeeManagement;

import Connection.DBconnect;
import Interfaces.Main.Home;
import Interfaces.Main.Login;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;




/**
 *
 * @author Minindu Sudantha
 */
public class Employee_home extends javax.swing.JFrame {

    /**
     * Creates new form Employee_home
     */
    
    Connection connection = null;
    PreparedStatement pat = null;
    ResultSet rs = null;
    
    public Employee_home() {
        initComponents();
        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH); 
        
        connection = DBconnect.connect();
       
        loadTB();
    }

           public void loadTB()
    {
        try{
            String M = "SELECT id,eName,eAddress,Contact_no,NIC,Birthday,Salary FROM employee";
            pat = connection.prepareStatement(M);
            rs = pat.executeQuery();
            
          Table1.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            System.out.println("e");
            
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        home = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        contact_no = new javax.swing.JTextField();
        nic = new javax.swing.JTextField();
        sal = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        eid = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        pdfbtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        bbb = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/EmployeeManagement/update.png"))); // NOI18N
        jButton2.setText("Update Employee Details");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/EmployeeManagement/delete.png"))); // NOI18N
        jButton3.setText("Delete Employee Details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        home.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/EmployeeManagement/home.png"))); // NOI18N
        home.setText("Home");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Full Name");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Address");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Contact Number");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("NIC Number");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Birthday  Date");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Salary");

        name.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameKeyTyped(evt);
            }
        });

        address.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        contact_no.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        contact_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contact_noKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contact_noKeyTyped(evt);
            }
        });

        nic.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nicKeyReleased(evt);
            }
        });

        sal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        sal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                salKeyTyped(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/EmployeeManagement/add.png"))); // NOI18N
        jButton5.setText("Add New Employee");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Table1);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel7.setText(" Employee Management System");

        eid.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        eid.setText("ID ");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/EmployeeManagement/search.png"))); // NOI18N
        jButton1.setText("Search Employee");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        pdfbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pdfbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/EmployeeManagement/pdf.png"))); // NOI18N
        pdfbtn.setText("GET PDF");
        pdfbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfbtnActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/EmployeeManagement/home.png"))); // NOI18N
        jButton4.setText("Log Out");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setText("Employee ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(home)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 613, Short.MAX_VALUE)
                                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1)
                                        .addGap(44, 44, 44)
                                        .addComponent(pdfbtn)
                                        .addGap(31, 31, 31))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(41, 41, 41)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                                            .addComponent(contact_no, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                                            .addComponent(address))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(sal, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                                .addComponent(nic, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                                            .addComponent(bbb, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(261, 261, 261))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(eid, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jButton4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton5)))
                                .addGap(51, 51, 51)
                                .addComponent(jButton2)
                                .addGap(44, 44, 44)
                                .addComponent(jButton3)
                                .addGap(47, 47, 47))))
                    .addComponent(jScrollPane3))
                .addGap(110, 110, 110))
            .addGroup(layout.createSequentialGroup()
                .addGap(505, 505, 505)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(home)
                    .addComponent(jButton5)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eid)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(contact_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(118, 118, 118))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bbb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(69, 69, 69)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(pdfbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
                // insert Employee details

        
        String Name = name.getText();
        String Address = address.getText();
        String Contact_no = contact_no.getText();
        String NIC = nic.getText();
        Date Birthday = bbb.getDate();
           
       // String Birthday = b_date.getToolTipText();
        String Salary = sal.getText();

         
                if(Name.equals("") && Address.equals("") && Contact_no.equals("") && NIC.equals("") && Birthday ==(null) && Salary.equals("")){
            JOptionPane.showMessageDialog(null, "Please Fill All Feilds");
        }
        else if(Name.equals("")){
            JOptionPane.showMessageDialog(null, "Please Enter The Employee Name");
            return;
        }else if(Contact_no.equals("")){
            JOptionPane.showMessageDialog(null, "Please Enter The Employee Contact Number");
            return;
        }else if(Address.equals("")){
            JOptionPane.showMessageDialog(null, "Please Enter The Employee Address");
            return;
        }else if(Birthday ==(null)){
            JOptionPane.showMessageDialog(null, "Please Enter The Employee Birthday");
            return;
        }else if(NIC.equals("")){
            JOptionPane.showMessageDialog(null, "Please Enter The Employee NIC Number");
            return;
        }else if(Salary.equals("")){
            JOptionPane.showMessageDialog(null, "Please Enter The Employee Salary");
            return;
        }else if(!Contact_no.matches("^[0-9]*$") || Contact_no.length()!=10){
            JOptionPane.showMessageDialog(this, "Invalid Contact Number");
            return;
        }else if(!NIC.matches("^[0-9]{9}[vVxX]*$") && NIC.length()!=10){
            JOptionPane.showMessageDialog(this, "Invalid NIC Number");
            return ;
        }
        else{
            JOptionPane.showMessageDialog(this, "Employee Details Added Successfully!");
        }
            DateFormat DateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String FormatedDate = DateFormat.format(Birthday);
        
        try {
        
            String M = "INSERT INTO employee (eName,eAddress,Contact_no,NIC,Birthday,Salary) VALUES ('"+ Name +"', '"+ Address +"', '"+ Contact_no +"', '"+ NIC +"', '"+ FormatedDate +"', '"+ Salary +"')";
            pat = connection.prepareStatement(M);
            pat.execute();

            

        } catch(Exception e) {
            System.out.println("e");
        }
           loadTB();    
           clear();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Update Employee
        
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this Employee");

        if(x == 0)
        {
            String id = eid.getText();
        String Name = name.getText();
        String Address = address.getText();
        String Contact_no = contact_no.getText();
        String NIC = nic.getText();
        Date Birthday = bbb.getDate();
         
       // String Birthday = b_date.getToolTipText();
        String Salary = sal.getText();
        if(Name.equals("") || Address.equals("") || Contact_no.equals("") || NIC.equals("") || Birthday ==(null) || Salary.equals("")){
            JOptionPane.showMessageDialog(null, "Please Fill All Feilds");
            return  ;
        }
       
        else if(!Contact_no.matches("^[0-9]*$") || Contact_no.length()!=10){
            JOptionPane.showMessageDialog(this, "Invalid Contact Number");
            return;
        }else if(!NIC.matches("^[0-9]{9}[vVxX]*$") && NIC.length()!=10){
            JOptionPane.showMessageDialog(this, "Invalid NIC Number");
            return  ;
        }
        else{
            JOptionPane.showMessageDialog(this, "Employee Updated!");
        }
DateFormat DateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String FormatedDate = DateFormat.format(Birthday);
        
            String sql = "UPDATE employee SET eName = '"+ Name +"', eAddress = '"+ Address +"', Contact_no = '"+ Contact_no +"', NIC = '"+ NIC +"', Birthday = '"+ FormatedDate +"', Salary = '"+ Salary +"' WHERE id = '"+ id +"'";

            try{
                pat = connection.prepareStatement(sql);
                pat.execute();

                //load table

                
                JOptionPane.showMessageDialog(this, "Updated Successfully!");
               
            } catch(Exception e) {
                System.out.println("e");
            }
             loadTB();
         clear();
        }
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table1MouseClicked
        
        int r = Table1.getSelectedRow();
        
                String id = Table1.getValueAt(r, 0).toString();
        String Name = Table1.getValueAt(r, 1).toString();
        String Address = Table1.getValueAt(r, 2).toString();
        String Contact_no = Table1.getValueAt(r, 3).toString();
        String NIC = Table1.getValueAt(r, 4).toString();
        String Birthday = Table1.getValueAt(r, 5).toString();
        String Salary = Table1.getValueAt(r, 6).toString();
        
        name.setText(Name);
        address.setText(Address);
        contact_no.setText(Contact_no);
        nic.setText(NIC);
        //bbb.setDate(Birthday);
        sal.setText(Salary);
        eid.setText(id);
        
          try {
           
            Date dateFormat = new SimpleDateFormat("yyyy-MM-dd").parse(Birthday);
            bbb.setDate(dateFormat);
        
        }
        catch (Exception e) 
        {
           
            System.out.println(e);
        }
          
        Table1.setToolTipText(id);
       
    }//GEN-LAST:event_Table1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Delete Employee
        
                int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this Employee");

        if(x == 0){
            String id = eid.getText();

            String sql = "DELETE FROM employee WHERE id='"+ id +"'";

            try{
                pat = connection.prepareStatement(sql);
                pat.execute();

                //load table
                 loadTB();
                 JOptionPane.showMessageDialog(this, "Record Deleted");
clear();
            } catch(Exception e) {
                System.out.println("e");
            }
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Search Employee
        
                String id = search.getText();

        String M = "SELECT id,eName,eAddress,Contact_no,NIC,Birthday,Salary FROM employee WHERE id LIKE '%"+ id +"%'";

        try{
            pat = connection.prepareStatement(M);
            rs = pat.executeQuery();

            Table1.setModel(DbUtils.resultSetToTableModel(rs));

        } catch(Exception e) {
            System.out.println("e");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // home page button:
        
         Home home = new Home();
        home.setVisible(true);
    }//GEN-LAST:event_homeActionPerformed

    private void pdfbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfbtnActionPerformed
        // Generate a pdf report
        
        String path="";
        JFileChooser jfilechooser = new JFileChooser();
        jfilechooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = jfilechooser.showSaveDialog(this);
        
        if(x==JFileChooser.APPROVE_OPTION){
            path=jfilechooser.getSelectedFile().getPath();
        }
        
        Document document = new Document();
        
        try {
            try {
                PdfWriter.getInstance(document, new FileOutputStream(path+"Employee.pdf"));
                  document.open();
                  
                PdfPTable table2 = new PdfPTable(7);
               
            //adding headers
            table2.addCell("EID");
            table2.addCell("Name");
            table2.addCell("Address");
            table2.addCell("Contact no");
            table2.addCell("NIC");
            table2.addCell("Birthday");
            table2.addCell("Salary");
            
            for (int r = 0; r < Table1.getRowCount(); r++){
                
        String id = Table1.getValueAt(r, 0).toString();
        String Name = Table1.getValueAt(r, 1).toString();
        String Address = Table1.getValueAt(r, 2).toString();
        String Contact_no = Table1.getValueAt(r, 3).toString();
        String NIC = Table1.getValueAt(r, 4).toString();
        String Birthday = Table1.getValueAt(r, 5).toString();
        String Salary = Table1.getValueAt(r, 6).toString();
                
                table2.addCell(id);
                table2.addCell(Name);
                table2.addCell(Address);
                table2.addCell(Contact_no);
                table2.addCell(NIC);
                table2.addCell(Birthday);
                table2.addCell(Salary);
                
                           }
            document.add(table2);
            JOptionPane.showMessageDialog(null, "Download PDF");
            } catch (DocumentException ex) {
                Logger.getLogger(Employee_home.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("e");
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Employee_home.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("e");
        }
        
        document.close();
                          
    }//GEN-LAST:event_pdfbtnActionPerformed

    private void nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyTyped
        // TODO add your handling code here:
                    char c=evt.getKeyChar();
        if(! (Character.isAlphabetic(c) || (c==KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_nameKeyTyped

    private void contact_noKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contact_noKeyTyped
        // TODO add your handling code here:
                   char c=evt.getKeyChar();
        if(! (Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_contact_noKeyTyped

    private void salKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salKeyTyped
        // TODO add your handling code here:
                         char c=evt.getKeyChar();
        if(! (Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_salKeyTyped

    private void contact_noKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contact_noKeyReleased
              String Contact_no = contact_no.getText();
        
        if(!Contact_no.matches("^[0-9]*$") || Contact_no.length()!=10)
        {
            contact_no.setBackground(Color.RED);
        }
        else{
            contact_no.setBackground(Color.green);
        }
    }//GEN-LAST:event_contact_noKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Log out button
        this.dispose();
           Login login = new Login();
        login.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void nicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicKeyReleased
         //TODO add your handling code here:
           String NIC = nic.getText();
        
        if(NIC.matches("^[0-9]{9}[vVxX]*$") && NIC.length()==10)
        {
           nic.setBackground(Color.green);
        }
        else{
           nic.setBackground(Color.RED);
        }
    }//GEN-LAST:event_nicKeyReleased

       public void clear() {
        eid.setText("");
        name.setText("");
        address.setText("");
        nic.setText("");
        bbb.setDate(null);
        contact_no.setText("");
        sal.setText("");
        

    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employee_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employee_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employee_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employee_home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table1;
    private javax.swing.JTextField address;
    private com.toedter.calendar.JDateChooser bbb;
    private javax.swing.JTextField contact_no;
    private javax.swing.JLabel eid;
    private javax.swing.JButton home;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField nic;
    private javax.swing.JButton pdfbtn;
    private javax.swing.JTextField sal;
    private javax.swing.JTextField search;
    // End of variables declaration//GEN-END:variables
}
